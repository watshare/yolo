name: 下载并打包NPM插件及依赖

on:
  workflow_dispatch:
    inputs:
      node-version:
        description: 'Node.js版本'
        required: false
        default: '20.x'
      npm-version:
        description: 'npm版本'
        required: false
        default: '10.x'
      packages:
        description: '要下载的npm插件名，多个请用逗号分隔（如：express,lodash）'
        required: true

jobs:
  download-and-archive:
    runs-on: ubuntu-latest
    steps:
      - name: 设置Node.js环境
        uses: actions/setup-node@v4
        with:
          node-version: ${{ github.event.inputs.node-version }}

      - name: 升级npm
        run: npm install -g npm@${{ github.event.inputs.npm-version }}

      - name: 创建package.json
        run: |
          echo '{
            "name": "temp-download",
            "version": "1.0.0"
          }' > package.json

      - name: 安装指定插件
        run: npm install ${{ github.event.inputs.packages }}

      - name: 解析package-lock.json并下载所有包
        run: |
          python3 <<EOF
import json, os, urllib.request
with open('package-lock.json', 'r') as f:
    lock = json.load(f)
def download_pkg(dep, prefix=''):
    info = lock['packages'].get(dep)
    if info and 'resolved' in info:
        url = info['resolved']
        fname = dep.strip('node_modules/') + '-' + url.split('/')[-1]
        fname = fname.replace('/', '_')
        print(f'下载: {fname}')
        try:
            urllib.request.urlretrieve(url, f'pkgs/{fname}')
        except Exception as e:
            print(f'下载失败: {url} 错误: {e}')
os.makedirs('pkgs', exist_ok=True)
for dep in lock.get('packages', {}):
    if dep == '':
        continue
    download_pkg(dep)
EOF

      - name: 打包所有下载的包
        run: |
          zip -r npm_packages.zip pkgs package-lock.json package.json

      - name: 上传zip包
        uses: actions/upload-artifact@v4
        with:
          name: npm_packages_zip
          path: npm_packages.zip
