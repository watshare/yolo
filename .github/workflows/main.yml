name: Python Multi-Platform Packaging 

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Target Platform (Windows/Linux/macOS)'
        required: true 
        default: 'Linux-x64'
        type: choice 
        options:
          - Windows-x64 
          - Linux-x64 
          - macOS-arm64 
          - macOS-x64 
          - Linux-ARM 
      python-version:
        description: 'Python Version'
        required: true 
        default: '3.10'
        type: choice 
        options:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
jobs:
  build:
    runs-on: ${{
      if contains(inputs.platform, 'Windows') }}windows-latest${{
      else if contains(inputs.platform, 'Linux') }}ubuntu-latest${{
      else if contains(inputs.platform, 'macOS') }}macos-latest${{
      endif }}
    strategy:
      matrix:
        platform: [${{ inputs.platform }},]
    steps:
      - name: Checkout code 
        uses: actions/checkout@v3

      - name: Setup Python ${{ inputs.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Configure pip mirrors 
        shell: bash 
        run: |
          if [ "$(uname)" = "Linux" ]; then 
            pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/
            pip config set global.trusted-host mirrors.aliyun.com 
          elif [ "$(uname)" = "Darwin" ]; then 
            mkdir -p ~/Library/Application\ Support/pip 
            echo "[global]" > ~/Library/Application\ Support/pip/pip.conf 
            echo "index-url = https://pypi.tuna.tsinghua.edu.cn/simple" >> ~/Library/Application\ Support/pip/pip.conf 
          else 
            mkdir -p ~/.pip 
            echo "[global]" > ~/.pip/pip.conf 
            echo "index-url = https://mirrors.aliyun.com/pypi/simple/" >> ~/.pip/pip.conf 
          fi 

      - name: Install dependencies 
        run: |
          python -m pip install --upgrade pip 
          pip install -r requirements.txt 

      - name: Build package 
        run: |
          python setup.py sdist bdist_wheel 

      - name: Windows post-processing 
        if: contains(inputs.platform, 'Windows')
        run: |
          icacls dist /grant Everyone:F /T

      - name: Upload artifact 
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.platform }}-python${{ inputs.python-version }}-package 
          path: dist/
